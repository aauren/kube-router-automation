---
# This Ansible playbook will:
#   - Setup containerd as the host's runtime
#   - Install Kubernetes tooling
#   - Use kubeadm to create a cluster on the node (identified in inventory as "leader")
#   - Will join any workers to the cluster (identified in inventory as "workers")
#   - Deploy kube-router from either a file or from the upstream all features manifest
#
#
# Variables available to pass at runtime:
#   - file_manifest: Allows you to specify a path to a kube-router manifest from file rather than Ansible downloading it from upstream (default: blank)
#   - kube_proxy_replacement: Allows you to enable / disable kube_proxy_replacement mode (default: true)
#
# An invocation of Ansible that uses a variable substitution might look like:
# ansible-playbook -i ansible/inventory/hosts.yaml ansible/playbooks/kube-router-containerd.yaml --extra-vars "file_manifest=/home/foo/kube-router.yaml"
#
# An invocation that skips specific tags might look like:
# ansible-playbook -i ansible/inventory/hosts.yaml ansible/playbooks/kube-router-containerd.yaml --skip-tags setup,leader
#
# An invocation that only runs specific tags might look like:
# ansible-playbook -i ansible/inventory/hosts.yaml ansible/playbooks/kube-router-containerd.yaml --tags kube-router

- name: Setup Base Packages
  hosts: container_runners
  become: yes
  tags:
    - setup
  tasks:
    - name: Setup & Run Containerd
      import_role:
        name: container_runner
        tasks_from: setup_containerd
    - name: Setup Kubernetes
      import_role:
        name: kubernetes
        tasks_from: install_kubernetes

- name: Create Cluster
  hosts: leader
  become: yes
  tasks:
    - name: Create Cluster with kubeadm
      tags:
        - cluster
        - leader
      import_role:
        name: kubernetes
        tasks_from: initialize_cluster
        vars_from: containerd
    - name: Setup User Kube Config
      tags:
        - user_config
      import_role:
        name: kubernetes
        tasks_from: copy_kubeconfig

- name: Join Cluster with Remaining Nodes
  hosts: workers
  become: yes
  serial: 1
  tasks:
    - name: Join Cluster with kubeadm
      tags:
        - cluster
        - workers
      import_role:
        name: kubernetes
        tasks_from: join_cluster
        vars_from: containerd
    - name: Setup User Kube Config
      tags:
        - user_config
      import_role:
        name: kubernetes
        tasks_from: copy_kubeconfig

- name: Deploy kube-router
  hosts: leader
  serial: 1
  tasks:
    - name: Deploy Upstream kube-router
      tags:
        - kube-router
      import_role:
        name: kube_router
        tasks_from: deploy_kube_router
      vars:
        cri: containerd

- name: Cleanup kube-proxy
  hosts: container_runners
  become: yes
  tasks:
    - name: Cleanup kube-proxy
      tags:
        - kube-router
        - cleanup
      import_role:
        name: kube_router
        tasks_from: cleanup_kube_proxy
      when: kube_proxy_replacement == true
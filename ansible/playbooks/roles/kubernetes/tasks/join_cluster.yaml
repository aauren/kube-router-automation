---

- name: Check Worker Status
  command: kubectl --kubeconfig="/etc/kubernetes/kubelet.conf" get node
  register: kube_status
  failed_when: kube_status.rc == 255

- name: Output Cluster Status
  debug:
    msg: "Kubernetes worker is already initialized, skipping"
  when: kube_status.rc == 0

- name: Get Cluster Join Token
  command: kubeadm token create --print-join-command
  delegate_to: "{{ item }}"
  register: join_token
  loop: "{{ groups['leader'] }}"
  when: kube_status.rc != 0

- name: Create kubeadm Config Dir
  file:
    path: /etc/kubeadm
    state: directory
    mode: '0755'
    owner: root
    group: root

- name: Create kubeadm Patch Dir
  file:
    path: /etc/kubeadm/patches
    state: directory
    mode: '0755'
    owner: root
    group: root

# here we have to parse the join command so that we can form a kubeadm JoinConfiguration. It looks like:
# kubeadm join 10.0.0.1:6443 --token numbersletters.numbersletters --discovery-token-ca-cert-hash
# sha256:longhexidecimalhashhere
- name: Set Join Command as Fact
  set_fact:
    join_command: "{{ join_token['results'][0]['stdout'] }}"
  when: kube_status.rc != 0

- name: Parse API Server as Fact
  set_fact:
    api_server: "{{ join_command.split(' ')[2] }}"
  when: kube_status.rc != 0

- name: Parse token as Fact
  set_fact:
    token: "{{ join_command.split(' ')[4] }}"
  when: kube_status.rc != 0

- name: Parse CA Hash as Fact
  set_fact:
    ca_hash: "{{ join_command.split(' ')[6] }}"
  when: kube_status.rc != 0

- name: Get EC2 Metadata when running in Amazon
  ec2_metadata_facts:
  when: ansible_system_vendor == "Amazon EC2"

- name: Template kubeadm Node JoinConfiguration
  template:
    src: templates/kubeadm-config-node.yaml.j2
    dest: /etc/kubeadm/kubeadmjoinconfig.yaml
  when: kube_status.rc != 0

- name: Add Patches for kubelet Config
  template:
    src: templates/kubelet-config-patches.yaml.j2
    # The name of the file is very specific, see the following for more details:
    # https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/control-plane-flags/#patches
    dest: /etc/kubeadm/patches/kubeletconfiguration+strategic.yaml

- name: Join Cluster with Token
  # Because we used a loop command (even over just one host) we have to parse results to get to stdout
  command: "kubeadm join --config /etc/kubeadm/kubeadmjoinconfig.yaml"
  when: kube_status.rc != 0

---

- name: Create Manifest Dir
  file:
    path: "{{ ansible_env.HOME }}/manifests"
    state: directory
    mode: '0750'

- name: Get kube-router Manifest from Upstream
  get_url:
    url: "{{ manifest }}"
    dest: "{{ ansible_env.HOME }}/manifests/kube-router.yaml"
  when: file_manifest is not defined and deploy_from_local_template is not defined

- name: Send Local kube-router Manifest to Remote
  copy:
    src: "{{ file_manifest }}"
    dest: "{{ ansible_env.HOME }}/manifests/kube-router.yaml"
  when: file_manifest is defined and deploy_from_local_template is not defined

# This is needed because by default this is a new play and we don't have facts for anything other than the kubernetes
# leader. This gathers the facts from our BGP routers so that we have access to their default IPv4 address below.
- name: Gather Facts From BGP Routers
  setup:
  delegate_to: "{{ item }}"
  delegate_facts: true
  loop: "{{ groups['bgp_routers'] }}"

- name: Set BGP Peer IPs
  set_fact:
    bgp_peer_ips: "{{ hostvars[item].ansible_default_ipv4.address }}"
  loop: "{{ groups['bgp_routers'] }}"

- name: Render Local kube-router Manifest to Remote
  template:
    src: templates/kube-router.yaml.j2
    dest: "{{ ansible_env.HOME }}/manifests/kube-router.yaml"
  when: file_manifest is not defined and deploy_from_local_template is defined

- name: Deploy kube-router Manifest
  command: kubectl apply -f {{ ansible_env.HOME }}/manifests/kube-router.yaml

- name: Remove kube-proxy
  command: kubectl -n kube-system delete daemonset kube-proxy
  when: kube_proxy_replacement == true
  register: kube_status
  failed_when: kube_status.rc == 255
